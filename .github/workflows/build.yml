name: Build App, Docker Image & Linting Test
on: 
  pull_request_target:
    types:
      - opened
    branches: [master, main]
  push:
    branches: [master, main]

jobs:
  build:
    name: Build App, Docker Image & Linting Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      - name: Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: | 
            ${{ runner.os }}-venv-
      - name: Activate and Install Depencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Check formatting
        run: . venv/bin/activate && isort -c .
      - name: Activate venv and Run Test 
        env: 
          DB_URI: ${{ secrets.DB_URI }}
        run: . venv/bin/activate && pytest
      - name: Build Docker image
        run: docker build --file Dockerfile .
      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/Lib/site-packages
          zip -r9 ../../../../api.zip .
      - name: Add App to Zip file
        run: cd ./app && zip -g ../api.zip -r .
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with: 
          name: api
          path: api.zip
